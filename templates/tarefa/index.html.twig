{% extends 'base.html.twig' %}

{% block title %}Tarefa index{% endblock %}

{% block stylesheets %}
<style>
tr.avisar td {
    background-color:#ffe564
}
</style>

{% endblock %}

{% block body %}
    <h1>Minhas Tarefas</h1>

    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nome da Tarefa</th>
                <th>Custo</th>
                <th>Data Limite</th>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody class="sortable">
            {% for tarefa in tarefas %}

                {% if tarefa.custo >= 1000  %}
                    <tr id="tarefa-{{ tarefa.id }}" class="avisar">
                {% else %}
                    <tr id="tarefa-{{ tarefa.id }}">
                {% endif %}
                    <td>{{ tarefa.id }}</td>
                    <td>{{ tarefa.nomeDaTarefa }}</td>
                    <td>R${{ tarefa.custo|number_format(2, ',', '.') }}</td>
                    <td>{{ tarefa.dataLimite ? tarefa.dataLimite|date('d/m/Y') : '' }}</td>
                    <td class="d-flex">
                        <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#updateModal{{ tarefa.id }}">
                            <i class="bi bi-pencil-square"></i>
                        </button>

                        <div class="modal fade" id="updateModal{{ tarefa.id }}" tabindex="-1"
                            aria-labelledby="updateModalLabel{{ tarefa.id }}" aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered">
                                <div class="modal-content">
                                    <div class="modal-header" style="background-color:#0d6efd;">
                                        <h5 class="modal-title text-white" id="updateModalLabel{{ tarefa.id }}">
                                            Editar Tarefa #{{ tarefa.id }}
                                        </h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>

                                    <div class="modal-body">
                                        {{ form_start(forms[tarefa.id], {
                                            'attr': {
                                                'id': 'form-edit-tarefa-' ~ tarefa.id,
                                                'data-tarefa-id': tarefa.id,
                                            }
                                        }) }}


                                        {% for field in forms[tarefa.id] %}
                                            {% if not isAWS or field.vars.name != '_token' %}
                                                <div class="mb-3">
                                                    <label for="{{ field.vars.id }}" class="form-label">
                                                    {% if loop.index == 1 %}
                                                        {{ field.vars.label }}
                                                        Nome da Tarefa
                                                    {% endif %}
                                                    {% if loop.index == 2 %}
                                                        Custo (R$)
                                                    {% endif %}
                                                    {% if loop.index == 3 %}
                                                        Data Limite
                                                    {% endif %}
                                                    </label>
                                                    {{ form_widget(field, {'attr': {'class': 'form-control'}}) }}
                                                    <div class="invalid-feedback">
                                                        {{ form_errors(field) }}
                                                    </div>
                                                </div>
                                            {% endif %}
                                        {% endfor %}

                                        {{ form_end(forms[tarefa.id]) }}
                                    </div>

                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-primary save-tarefa-btn"
                                                data-tarefa-id="{{ tarefa.id }}">
                                            Salvar Alterações
                                        </button>
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"
                                            style="color:#0d6efd; border-color:#0d6efd; background-color:white;"
                                        >
                                            Cancelar
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <form method="post" id="delete-form{{ tarefa.id }}" action="{{ path('app_tarefa_delete', {'id': tarefa.id}) }}">
                            <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ tarefa.id) }}">
                            <button class="btn btn-sm" type="button" data-bs-toggle="modal" data-bs-target="#deletionModalCenter{{ tarefa.id }}" style="margin-left:8px;background-color:red;color:white"><i class="bi bi-trash-fill"></i>
                            </button>
                        </form>

                        <div class="modal fade" id="deletionModalCenter{{ tarefa.id }}" tabindex="-1" role="dialog" aria-labelledby="deletionModalCenterTitle" aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered" role="document">
                                <div class="modal-content">
                                    <div class="modal-header" style="background-color:red;">
                                        <h5 class="modal-title" id="deletionModalLongTitle{{ tarefa.id }}" style="line-height:inherit;color: white;">Confirmação de Deleção</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        Atenção ⚠️‼️ Tem certeza que quer deletar essa tarefa?
                                    </div>
                                    <div class="modal-footer">
                                        <button type="submit" form="delete-form{{ tarefa.id }}" class="btn btn-primary mt-0 mr-0 mb-0" style="border-color:red;background-color:red;color:white;">Sim!</button>
                                        <button type="button" class="btn btn-secondary mb-0 mt-0" style="background-color:white;border-color:red;color:red" data-bs-dismiss="modal">Não</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </td>
                </tr>
            {% endfor %}

        </tbody>
    </table>

    <a class="btn btn-primary" href="{{ path('app_tarefa_new') }}">Incluir</a>
{% endblock %}

{% block javascripts %}
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
    <script src="https://code.jquery.com/ui/1.14.1/jquery-ui.min.js" integrity="sha256-AlTido85uXPlSyyaZNsjJXeCs07eSv3r43kyCVc8ChI=" crossorigin="anonymous"></script>

    <script>
        const isLocalhost = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';

        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('.save-tarefa-btn').forEach(button => {
                button.addEventListener('click', function() {
                    const tarefaId = this.dataset.tarefaId;
                    const form = document.getElementById(`form-edit-tarefa-${tarefaId}`);
                    const modal = bootstrap.Modal.getInstance(document.getElementById(`updateModal${tarefaId}`));

                    if (!form) {
                        console.error('Formulário não encontrado');
                        return;
                    }

                    this.disabled = true;
                    this.innerHTML = '<span class="spinner-border spinner-border-sm" role="status"></span> Salvando...';

                    const formInputs = form.querySelectorAll('input, select, textarea');
                    const data = {};

                    formInputs.forEach(input => {
                        if (input.type === 'checkbox' && !input.checked) return;
                        if (input.type === 'radio' && !input.checked) return;

                        // Se não for localhost e o campo for _token, pular
                        if (!isLocalhost && input.name.includes('_token')) {
                            console.log('Pulando token CSRF na AWS');
                            return;
                        }

                        data[input.name] = input.value;
                    });

                    console.log('Is Localhost:', isLocalhost);
                    console.log('Data being sent:', data);

                    const params = new URLSearchParams();
                    Object.entries(data).forEach(([key, value]) => {
                        params.append(key, value);
                    });

                    fetch(form.action, {
                        method: 'POST',
                        body: params,
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.status === 'success') {
                            showAlert('success', data.message);
                            modal.hide();
                            setTimeout(() => location.reload(), 1000);
                        } else {
                            showAlert('error', data.message);
                        }
                    })
                    .catch(error => {
                        console.error('Erro:', error);
                        showAlert('error', 'Erro ao salvar a tarefa');
                    })
                    .finally(() => {
                        this.disabled = false;
                        this.innerHTML = 'Salvar Alterações';
                    });
                });
            });
            function showAlert(type, message) {
                const alertDiv = document.createElement('div');
                alertDiv.className = `alert alert-${type === 'success' ? 'success' : 'danger'} alert-dismissible fade show`;
                alertDiv.innerHTML = `
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                `;

                const container = document.querySelector('.container');
                if (container) {
                    container.insertBefore(alertDiv, container.firstChild);

                    setTimeout(() => {
                    if (alertDiv.parentNode) {
                        alertDiv.remove();
                    }
                    }, 5000);
                }
            }
        });
    </script>

    <script>
        $( function() {
            $( ".sortable" ).sortable({

                update: function(event, ui) {
                    var posicaoAntes = ui.item.data('old-index');
                    var posicaoNova = ui.item.index();

                    ui.item.data('old-index', posicaoNova);

                    fetch('/api/reordena', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: JSON.stringify({
                            velhaPos: posicaoAntes,
                            novaPos: posicaoNova
                        })
                    })
                    .then(response => {
                        return response.json()
                    })
                    .then(data => {
                        if (data.success) { }
                        else {console.log('errou!')}
                    })
                    .catch(error => {
                        console.error('Erro na requisição:', error);
                    })
                }
            });
            $(".sortable tr").each(function(index) {
                $(this).data('old-index', index);
            });
        } );
    </script>
{% endblock %}
